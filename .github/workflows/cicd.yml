name: CICD
on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Set up JDK 17
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven
      - name: Java version
        run: java --version

      - name: Build with Maven
        run: mvn -B -DskipTests clean package

      - name: mvn test
        run: mvn test

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Trivy Installation
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Trivy scan
        run: trivy fs --format table -o fs-report.json .

      - name: gitleaks scan
        run: sudo apt install gitleaks -y

      - name: Gitleaks Code Scan
        run: gitleaks detect source . -r gitleaks-report.json -f json

  sonar-quality-gate:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: checkout the code
        uses: actions/checkout@v4

      - name: set up jdk 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonarcloud
          restore-keys: |
            ${{ runner.os }}-sonarcloud

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.organization=your-org \
            -Dsonar.projectKey=your-org_your-repo \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

      - name: SonarCloud Quality Gate
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            bash <(curl -s https://raw.githubusercontent.com/SonarSource/sonarcloud-github-action/master/entrypoint.sh)
  buils_docker_image_and_push:
    runs-on: ubuntu-latest
    needs: sonar-quality-gate
    steps:
      - uses: actions/checkout@v4